Task Title:
Parallel Text File Analyzer: Threading vs Multiprocessing

Task Description:
Develop a Python program that processes and analyzes multiple text files in parallel to search for predefined keywords. You are required to implement two versions of the program:

1. **Multithreading version** (using `threading` module):
   - Divide a list of text files among multiple threads.
   - Each thread searches for specific keywords in its assigned files.
   - Collect and output the search results from all threads.

2. **Multiprocessing version** (using `multiprocessing` module):
   - Distribute the files among multiple processes.
   - Each process searches for keywords in its files.
   - Use inter-process communication (e.g., `Queue`) to gather and print results.

Acceptance Criteria:
- Both threading and multiprocessing approaches are implemented correctly.
- File distribution among threads or processes is handled properly.
- Execution time for both versions is measured and printed.
- Exceptions and file I/O errors are handled gracefully.
- Both versions return a dictionary: { keyword: [list of file paths where found] }
